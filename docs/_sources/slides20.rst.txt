.. raw:: html

   <link rel="stylesheet" href="_static/revealjs/css/theme/white.css">
   <link rel="stylesheet" href="_static/default.css">


Machine Learning Engineering
=============================================

Lecture 20
------------

      All About GPU 2


Admin
------

.. revealjs_fragments::

   * HW 2 grades
   * Quiz Grades


Today's Class
----------------

.. revealjs_fragments::

   * Review: Memory
   * CUDA Efficiency
   * Efficiency Tricks

Memory
========

Stack
-------

.. revealjs_fragments::

   * Threads: Run the code
   * Block: Groups "close" threads
   * Grid: All the thread blocks
   * Total Threads: `threads_per_block` x `total_blocks`

Thread Names
-------------

.. image:: figs/gpu/threadid@3x.png
           :align: center
           :width: 500px

Block Names
-------------

.. image:: figs/gpu/blockid@3x.png
           :align: center
           :width: 500px


Memory
-------


* CUDA also has a memory stack
* Local > Shared > Global
* Fast code does minimal global reads


Local Memory
-------------

.. image:: figs/gpu/local\ mem@3x.png
           :align: center
           :width: 500px

Example
--------

Code ::

  def local_fn(out, a):
    local = numba.cuda.local.array(10, numba.int32)
    local[0] = 10
    local[5] = 20
  local_fn = numba.cuda.jit()(local_fn)
  local_fn[BLOCKS, THREADS](out, a)

Block Shared Memory
-------------------

.. image:: figs/gpu/sharedmem@3x.png
           :align: center
           :width: 500px

Example
---------

Code ::

  def block_fn(out, a):
    shared = numba.cuda.shared.array(10, numba.int32)
    shared[0] = 10
    numba.cuda.syncthreads()
    shared[5] = 20
  block_fn = numba.cuda.jit()(block_fn)
  block_fn[BLOCKS, THREADS](out, a)


Quiz
-----

  `Quiz <https://canvas.cornell.edu/courses/20583/assignments/173803>`_


