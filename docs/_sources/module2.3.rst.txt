

Module 2.3 - Gradients
========================



Module 2.3 - Gradients
-----------------------

   Gradients


Tensor Functions
-----------------

Unary ::

    new_tensor = tensor.log()

Binary (for now, only same shape) ::

    new_tensor = tensor1 + tensor2

Reductions ::

    new_tensor = tensor.sum()


Tensor Ops
-----------------

.. revealjs_fragments::

   1) **Map** - Apply to all elements

   2) **Zip** (same as zipWith) - Apply to all pairs

   3) **Reduce** - Reduce a subset


Map
---------

.. image:: figs/Ops/map.png
           :align: center
      

Zip
---------

.. image:: figs/Ops/zip.png
           :align: center

Reduce
---------

.. image:: figs/Ops/reduce.png
           :align: center

Errata
-------------------

* Tasks
* Bad Assert


Reduction
---------
.. image:: figs/Reduce/sum0.png
           :align: center

Reduction
---------

.. image:: figs/Reduce/sum1.png
           :align: center

Reduction
---------

.. image:: figs/Reduce/implement.png
           :align: center


Reduction
---------

.. image:: figs/Reduce/sum2.png
           :align: center


Lecture
========

Outline
--------

.. revealjs_fragments::

   * Gradients
   * Challenges

Review: Gradients
===================


Terminology
------------

.. revealjs_fragments::

   * Scalar -> Tensor
   * Derivative -> Gradient
   * `d_out` ->  `grad_out`
   * Recommendation: Reason through gradients as many derivatives


Map Gradient
------------

.. image:: figs/Ops/map\ back.png
           :align: center

Zip Gradient
------------

.. image:: figs/Ops/zip\ back.png
           :align: center


Reduce Gradient
----------------


.. image:: figs/Ops/reduce\ back.png
           :align: center


Lecture Quiz
-------------

  `Quiz <https://canvas.cornell.edu/courses/20583/assignments/164632>`_


Gradients
==========

Derivatives
------------

.. revealjs_fragments::

   * Each tensor arg is many args
   * Returning tensor is like running several Functions
   * Result `backward` needs to run chain-rule for each arg and output.


Terminology
------------

.. revealjs_fragments::

   * Scalar -> Tensor
   * Derivative -> Gradient
   * `d_out` ->  `grad_out`
   * Recommendation: Reason through gradients as many derivatives


Map Gradient
------------

.. image:: figs/Ops/map\ back.png
           :align: center

Zip Gradient
------------

.. image:: figs/Ops/zip\ back.png
           :align: center


Reduce Gradient
----------------


.. image:: figs/Ops/reduce\ back.png
           :align: center




  

